<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Achievements" xml:space="preserve">
    <value>Achievements</value>
  </data>
  <data name="AddCompany" xml:space="preserve">
    <value>Add company</value>
  </data>
  <data name="AddCourse" xml:space="preserve">
    <value>Add course</value>
  </data>
  <data name="AddEducation" xml:space="preserve">
    <value>Add education</value>
  </data>
  <data name="AdditionalBonuses" xml:space="preserve">
    <value>Additional bonuses (company car, stock options, etc.)</value>
  </data>
  <data name="AdditionalComments" xml:space="preserve">
    <value>Additional comments</value>
  </data>
  <data name="AddLanguage" xml:space="preserve">
    <value>Add language</value>
  </data>
  <data name="AddMembership" xml:space="preserve">
    <value>Add membership</value>
  </data>
  <data name="AddPosition" xml:space="preserve">
    <value>Add position</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="BonusRequest" xml:space="preserve">
    <value>Requested bonuses</value>
  </data>
  <data name="CareerSummary" xml:space="preserve">
    <value>Career summary</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City, country</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Additional comments</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="CompanyInformation" xml:space="preserve">
    <value>Company information</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company name *</value>
  </data>
  <data name="Compensation" xml:space="preserve">
    <value>Compensation</value>
  </data>
  <data name="CourseName" xml:space="preserve">
    <value>Course name, certificate obtained</value>
  </data>
  <data name="Courses" xml:space="preserve">
    <value>Additional courses</value>
  </data>
  <data name="CurrentBonuses" xml:space="preserve">
    <value>Current bonuses (gross)</value>
  </data>
  <data name="CurrentSalary" xml:space="preserve">
    <value>Current fixed salary (gross per month, currency)</value>
  </data>
  <data name="Degree" xml:space="preserve">
    <value>Speciality, degree</value>
  </data>
  <data name="DirectSubordinates" xml:space="preserve">
    <value>Direct and indirect subordinates (numbers and functions, if you have no, leave blank)</value>
  </data>
  <data name="Education" xml:space="preserve">
    <value>Education &amp; qualifications</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email *</value>
  </data>
  <data name="FromTime" xml:space="preserve">
    <value>From (YYYY) *</value>
  </data>
  <data name="FromYear" xml:space="preserve">
    <value>Period from (YYYY)</value>
  </data>
  <data name="FullName" xml:space="preserve">
    <value>Full name *</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Industry" xml:space="preserve">
    <value>Industry / business area</value>
  </data>
  <data name="Institution" xml:space="preserve">
    <value>Name of institution / country</value>
  </data>
  <data name="KeyTasks" xml:space="preserve">
    <value>Key tasks and responsibilities (write each in new line)</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LanguageName" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LinkedInLink" xml:space="preserve">
    <value>LinkedIn link</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="MainProductions" xml:space="preserve">
    <value>Main products / services</value>
  </data>
  <data name="MembershipDescription" xml:space="preserve">
    <value>Organizational membership</value>
  </data>
  <data name="Memberships" xml:space="preserve">
    <value>Social activities &amp; memberships</value>
  </data>
  <data name="NoticePeriod" xml:space="preserve">
    <value>Transition time to be able to start with new employer</value>
  </data>
  <data name="NoticePeriodLabel" xml:space="preserve">
    <value>Notice period</value>
  </data>
  <data name="Now" xml:space="preserve">
    <value>Present</value>
  </data>
  <data name="NumberOfDays" xml:space="preserve">
    <value>Number of days</value>
  </data>
  <data name="NumberOfEmployess" xml:space="preserve">
    <value>Number of employees</value>
  </data>
  <data name="OtherIndustry" xml:space="preserve">
    <value>Industry / business area</value>
  </data>
  <data name="ParentCompanyName" xml:space="preserve">
    <value>Parent company name</value>
  </data>
  <data name="Personal" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone *</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="PositionName" xml:space="preserve">
    <value>Position name *</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project (if you are not part of existing assignment, please indicate desired position)</value>
  </data>
  <data name="ReasonForLeaving" xml:space="preserve">
    <value>Reason for leaving (leave blank if you still work there)</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="ReportingTo" xml:space="preserve">
    <value>Reporting to (name and position)</value>
  </data>
  <data name="SalaryRequest" xml:space="preserve">
    <value>Salary request (gross per month, currency)</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="OtherInformation" xml:space="preserve">
    <value>Other contact information</value>
  </data>
  <data name="SpokenLevel" xml:space="preserve">
    <value>Spoken</value>
  </data>
  <data name="ToTime" xml:space="preserve">
    <value>To (YYYY) *</value>
  </data>
  <data name="ToYear" xml:space="preserve">
    <value>Period to (YYYY)</value>
  </data>
  <data name="Trainer" xml:space="preserve">
    <value>Training company, trainer</value>
  </data>
  <data name="Turnover" xml:space="preserve">
    <value>Turnover (+currency, year)</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="WrittenLevel" xml:space="preserve">
    <value>Written</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="AdditionalCommentsPlaceholder" xml:space="preserve">
    <value>Additional comments</value>
  </data>
  <data name="AddressPlaceholder" xml:space="preserve">
    <value>City, country</value>
  </data>
  <data name="KeyTasksPlaceholder" xml:space="preserve">
    <value>Key Tasks and responsibilities (Please write each in new line);\n •Task no 1;\n •Responsibility no 2;\n •Task no 3;\n •Etc.</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="PhonePlaceholder" xml:space="preserve">
    <value>Phone (mobile)</value>
  </data>
  <data name="PhoneCodePlaceholder" xml:space="preserve">
    <value>Country code</value>
  </data>
  <data name="AdditionalFiles" xml:space="preserve">
    <value>Additional files (certificates, motivation letter, etc.)</value>
  </data>
  <data name="InvalidYear" xml:space="preserve">
    <value>Invalid year!</value>
  </data>
  <data name="Present" xml:space="preserve">
    <value>Present</value>
  </data>
  <data name="TurnoverExample" xml:space="preserve">
    <value>e.g. 30 MEUR (2018)</value>
  </data>
  <data name="TurnoverPlaceholder" xml:space="preserve">
    <value>X EUR (YYYY)</value>
  </data>
  <data name="SaveNotice" xml:space="preserve">
    <value>Your data was saved successfully!</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete picture</value>
  </data>
  <data name="FromTimeWithMonth" xml:space="preserve">
    <value>From (YYYY or MM.YYYY) *</value>
  </data>
  <data name="ToTimeWithMonth" xml:space="preserve">
    <value>To (YYYY or MM.YYYY) *</value>
  </data>
  <data name="InvalidYearWithMonth" xml:space="preserve">
    <value>Invalid year and/or month!</value>
  </data>
  <data name="DeletePhoto" xml:space="preserve">
    <value>Delete photo</value>
  </data>
  <data name="EducationEntry" xml:space="preserve">
    <value>Education entry</value>
  </data>
</root>