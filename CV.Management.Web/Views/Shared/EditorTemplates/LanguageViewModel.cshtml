@using CV.Management.Web.Models
@model CV.Management.Web.Models.LanguageViewModel

<div class="row">

    <div id="language_container">
        @for (var i = 0; i < Model.Languages.Count; i++)
        {
        <div class="language_row row">
            <div class="col-xs-12">
                <div class="row">
                    <div class="col-xs-12">
                        <h5 class="uppercase">@Resources.LanguageEntry #<span class="language-number">@(i + 1)</span></h5>
                    </div>
                </div>
            </div>
            <div class="col-xs-11 right-border">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Languages[i].LanguageName, new { @class = "language-name-label control-label" })
                            @Html.EnumDropDownListFor(model => model.Languages[i].LanguageName, "Language", new { @class = "language-name-select form-control" })
                            @Html.ValidationMessageFor(model => model.Languages[i].LanguageName, "", new { @class = "language-name-validation" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Languages[i].SpokenLevel, new { @class = "language-spoken-label control-label" })
                            @Html.EnumDropDownListFor(model => model.Languages[i].SpokenLevel, "Spoken level", new { @class = "language-spoken-select form-control" })
                            @Html.ValidationMessageFor(model => model.Languages[i].SpokenLevel, "", new { @class = "language-spoken-validation" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Languages[i].WrittenLevel, new { @class = "language-written-label control-label" })
                            @Html.EnumDropDownListFor(model => model.Languages[i].WrittenLevel, "Written level", new { @class = "language-written-select form-control" })
                            @Html.ValidationMessageFor(model => model.Languages[i].WrittenLevel, "", new { @class = "language-written-validation" })
                        </div>
                    </div>
                    @*<div class="col-md-4" style="display: none;">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Languages[i].OtherLanguage, new { @class = "language-other-label control-label" })
                            @Html.TextBoxFor(model => model.Languages[i].OtherLanguage, new { @class = "language-other-input form-control", @placeholder = @Resources.OtherLanguageName })
                            @Html.ValidationMessageFor(model => model.Languages[i].OtherLanguage, "", new { @class = "language-other-validation" })
                        </div>
                    </div>*@

                    @if (string.IsNullOrEmpty(Model.Languages[i].OtherLanguage))
                    {
                        <div class="col-md-4"  style="display: none;">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Languages[i].OtherLanguage, new { @class = "language-other-label control-label" })
                                @Html.TextBoxFor(model => model.Languages[i].OtherLanguage, new { @class = "language-other-input form-control", @placeholder = @Resources.OtherLanguageName })
                                @Html.ValidationMessageFor(model => model.Languages[i].OtherLanguage, "", new { @class = "language-other-validation" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Languages[i].OtherLanguage, new { @class = "language-other-label control-label" })
                                @Html.TextBoxFor(model => model.Languages[i].OtherLanguage, new { @class = "language-other-input form-control", @placeholder = @Resources.OtherLanguageName })
                                @Html.ValidationMessageFor(model => model.Languages[i].OtherLanguage, "", new { @class = "language-other-validation" })
                            </div>
                        </div>
                    }

                </div>
            </div>
            <div class="col-xs-1">
                <img class="remove-button language-remove" src="~/Content/Images/remove.png" />
            </div>
        </div>
        }
    </div>

    <div class="row">
        <div class="col-xs-12 text-center add-button">
            <span id="language_add" class="tab_more uppercase">@Resources.AddLanguage</span>
        </div>
    </div>

</div>
