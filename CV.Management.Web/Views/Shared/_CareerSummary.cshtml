@model CV.Management.Web.Models.CareerSummaryViewModel

<div class="row">

    @using (Html.BeginForm("CareerSummary", "Cv", FormMethod.Post))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.AntiForgeryToken()

        <h4 class="uppercase">@Resources.CompanyInformation</h4>

        <h4 class="italic">Start with the most recent one</h4>

        <div id="companies_container">
            @for (var i = 0; i < Model.Companies.Count; i++)
            {
                <div class="company_row row">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-12">
                                <h5 class="uppercase">@Resources.Company #<span class="company-number">@(i + 1)</span></h5>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-11">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.Companies[i].Name, new { @class = "company-name-label control-label" })
                                    @Html.TextBoxFor(model => Model.Companies[i].Name, new { @class = "company-name-input form-control", @placeholder = @Resources.CompanyName })
                                    @Html.ValidationMessageFor(model => Model.Companies[i].Name, "", new { @class = "company-name-validation" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.Companies[i].City, new { @class = "company-city-label control-label" })
                                    @Html.TextBoxFor(model => Model.Companies[i].City, new { @class = "company-city-input form-control", @placeholder = @Resources.City })
                                    @Html.ValidationMessageFor(model => Model.Companies[i].City, "", new { @class = "company-city-validation" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.Companies[i].ParentCompanyName, new { @class = "company-parent-company-label control-label" })
                                    @Html.TextBoxFor(model => Model.Companies[i].ParentCompanyName, new { @class = "company-parent-company-input form-control", @placeholder = @Resources.ParentCompanyName })
                                    @Html.ValidationMessageFor(model => Model.Companies[i].ParentCompanyName, "", new { @class = "company-parent-company-validation" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(m => Model.Companies[i].Industry, new { @class = "company-industry-label" })
                                    @Html.EnumDropDownListFor(model => Model.Companies[i].Industry, "Please, select industry", new { @class = "company-industry-select form-control" })
                                    @Html.ValidationMessageFor(model => model.Companies[i].Industry, "", new { @class = "company-industry-validation" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.Companies[i].OtherIndustry, new { @class = "company-other-industry-label control-label" })
                                    @Html.TextBoxFor(model => Model.Companies[i].OtherIndustry, new { @class = "company-other-industry-input form-control", @placeholder = @Resources.OtherIndustry })
                                    @Html.ValidationMessageFor(model => Model.Companies[i].OtherIndustry, "", new { @class = "company-other-industry-validation" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.Companies[i].MainProductions, new { @class = "company-productions-label control-label" })
                                    @Html.TextBoxFor(model => Model.Companies[i].MainProductions, new { @class = "company-productions-input form-control", @placeholder = @Resources.MainProductions })
                                    @Html.ValidationMessageFor(model => Model.Companies[i].MainProductions, "", new { @class = "company-productions-validation" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.Companies[i].Turnover, new { @class = "company-turnover-label control-label" })
                                    @Html.TextBoxFor(model => Model.Companies[i].Turnover, new { @class = "company-turnover-input form-control", @placeholder = @Resources.Turnover })
                                    @Html.ValidationMessageFor(model => Model.Companies[i].Turnover, "", new { @class = "company-turnover-validation" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => Model.Companies[i].NumberOfEmployess, new { @class = "company-employees-label control-label" })
                                    @Html.TextBoxFor(model => Model.Companies[i].NumberOfEmployess, new { @class = "company-employees-input form-control", @placeholder = @Resources.NumberOfEmployess })
                                    @Html.ValidationMessageFor(model => Model.Companies[i].NumberOfEmployess, "", new { @class = "company-employees-validation" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-1">
                        <img class="remove-button company-remove" src="~/Content/Images/remove.png" />
                    </div>
                    <div class="positions_container">
                        @for (var j = 0; j < Model.Companies[i].Positions.Count; j++)
                        {
                            <div class="position_row row">
                                <div class="col-md-11 col-md-offset-1">
                                    <h5>@Resources.Position #<span class="position-number">@(j + 1)</span></h5>
                                </div>
                                <div class="col-md-11">
                                    <div class="row">
                                        <div class="col-md-5 col-md-offset-1 left-border left-control">
                                            <div class="form-group">
                                                @Html.LabelFor(model => Model.Companies[i].Positions[j].Name, new { @class = "position-name-label control-label" })
                                                @Html.TextBoxFor(model => Model.Companies[i].Positions[j].Name, new { @class = "position-name-input form-control", @placeholder = @Resources.PositionName })
                                                @Html.ValidationMessageFor(model => Model.Companies[i].Positions[j].Name, "", new { @class = "position-name-validation" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => Model.Companies[i].Positions[j].FromTime, new { @class = "position-from-time-label control-label" })
                                                @Html.TextBoxFor(model => Model.Companies[i].Positions[j].FromTime, new { @class = "position-from-time-input form-control", @placeholder = @Resources.FromTime })
                                                @Html.ValidationMessageFor(model => Model.Companies[i].Positions[j].FromTime, "", new { @class = "position-from-time-validation" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => Model.Companies[i].Positions[j].ToTime, new { @class = "position-to-time-label control-label" })
                                                @Html.TextBoxFor(model => Model.Companies[i].Positions[j].ToTime, new { @class = "position-to-time-input form-control", @placeholder = @Resources.ToTime })
                                                @Html.ValidationMessageFor(model => Model.Companies[i].Positions[j].ToTime, "", new { @class = "position-to-time-validation" })
                                                <div class="checkbox">
                                                    @Html.CheckBoxFor(model => Model.Companies[i].Positions[j].Now, new { @class = "career-position-now-input" })
                                                    @Html.LabelFor(model => Model.Companies[i].Positions[j].Now, new { @class = "career-position-now-label control-label" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-11 col-md-offset-1 left-border">
                                            <div class="form-group">
                                                @Html.LabelFor(model => Model.Companies[i].Positions[j].KeyTasks, new { @class = "position-key-tasks-label control-label" })
                                                @Html.TextAreaFor(model => Model.Companies[i].Positions[j].KeyTasks, new { @class = "position-key-tasks-input form-control", @rows = 5, @placeholder = @Resources.KeyTasksPlaceholder })
                                                @Html.ValidationMessageFor(model => Model.Companies[i].Positions[j].KeyTasks, "", new { @class = "position-key-tasks-validation" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4 col-md-offset-1 left-border">
                                            <div class="form-group">
                                                @Html.LabelFor(model => Model.Companies[i].Positions[j].ReportingTo, new { @class = "position-reporting-to-label control-label" })
                                                @Html.TextBoxFor(model => Model.Companies[i].Positions[j].ReportingTo, new { @class = "position-reporting-to-input form-control", @placeholder = @Resources.ReportingTo })
                                                @Html.ValidationMessageFor(model => Model.Companies[i].Positions[j].ReportingTo, "", new { @class = "position-reporting-to-validation" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-11 col-md-offset-1 left-border">
                                            <div class="form-group">
                                                @Html.LabelFor(model => Model.Companies[i].Positions[j].DirectSubordinates, new { @class = "position-subordinates-label control-label" })
                                                @Html.TextAreaFor(model => Model.Companies[i].Positions[j].DirectSubordinates, new { @class = "position-subordinates-input form-control", @rows = 5, @placeholder = @Resources.DirectSubordinates })
                                                @Html.ValidationMessageFor(model => Model.Companies[i].Positions[j].DirectSubordinates, "", new { @class = "position-subordinates-validation" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-11 col-md-offset-1 left-border">
                                            <div class="form-group">
                                                @Html.LabelFor(model => Model.Companies[i].Positions[j].Achievements, new { @class = "position-achievements-label control-label" })
                                                @Html.TextAreaFor(model => Model.Companies[i].Positions[j].Achievements, new { @class = "position-achievements-input form-control", @rows = 5, @placeholder = @Resources.Achievements })
                                                @Html.ValidationMessageFor(model => Model.Companies[i].Positions[j].Achievements, "", new { @class = "position-achievements-validation" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-11 col-md-offset-1 left-border">
                                            <div class="form-group">
                                                @Html.LabelFor(model => Model.Companies[i].Positions[j].ReasonForLeaving, new { @class = "position-reason-label control-label" })
                                                @Html.TextAreaFor(model => Model.Companies[i].Positions[j].ReasonForLeaving, new { @class = "position-reason-input form-control", @rows = 5, @placeholder = @Resources.ReasonForLeaving })
                                                @Html.ValidationMessageFor(model => Model.Companies[i].Positions[j].ReasonForLeaving, "", new { @class = "position-reason-validation" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <img class="remove-button position-remove" src="~/Content/Images/remove.png" />
                                </div>
                            </div>
                        }

                    </div>
                    <div class="row">
                        <div class="col-md-offset-1 col-md-10 text-center">
                            <span id="position_add" class="position_add tab_more uppercase">@Resources.AddPosition</span>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-12 text-center add-button">
            <span id="career_summary_add" class="tab_more uppercase">@Resources.AddCompany</span>
        </div>
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group text-right">
                        <input type="submit" value="@Resources.Save" class="btn btn-primary float-right" />
                    </div>
                </div>
            </div>
        </div>
    }
</div>
